You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

 

Example 1:

Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.
Example 2:

Input: s = "", t = "y"
Output: "y"
 

Constraints:

0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.


class Solution {
public:
    char findTheDifference(string s, string t) {
        
        /*
        vector<int> freq(26,0);
        
        for(auto& ch : s){
            freq[ch - 'a']++;
        }
        
        for(auto& ch : t){
            freq[ch - 'a']--;
            
            if(freq[ch - 'a'] == -1) return ch;
        }
        
        
        return 'a';
        
        tc -> O(N) + O(M)
        sc -> O(1)
        
        
        */
        char x = s[0];
        for(int i = 1; i < s.length(); i++){
            x ^= s[i];
        }
        
        for(int i = 0; i < t.length(); i++){
            x ^= t[i];
        }
        
        return x;
    }
};

